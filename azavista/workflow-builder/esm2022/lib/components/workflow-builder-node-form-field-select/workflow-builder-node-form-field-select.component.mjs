import { Component, Input, ViewChild } from '@angular/core';
import { FormArray, FormControl } from '@angular/forms';
import { WorkflowBuilderNodeFormFieldBaseComponent } from '../workflow-builder-node-form-field-text/workflow-builder-node-form-field-text.component';
import { trackByAttributeTranslations } from '../../utils';
import * as i0 from "@angular/core";
import * as i1 from "../../services/workflow-builder.form-field.service";
import * as i2 from "../../workflow-builder.controller";
import * as i3 from "@ngx-translate/core";
import * as i4 from "@angular/common";
import * as i5 from "@angular/material/form-field";
import * as i6 from "@angular/material/icon";
import * as i7 from "@angular/material/expansion";
import * as i8 from "@angular/material/select";
import * as i9 from "@angular/material/core";
import * as i10 from "@angular/material/list";
export class WorkflowBuilderNodeFormFieldSelectComponent extends WorkflowBuilderNodeFormFieldBaseComponent {
    constructor(fieldSvc, controller, translateSvc, ngZone) {
        super();
        this.fieldSvc = fieldSvc;
        this.controller = controller;
        this.translateSvc = translateSvc;
        this.ngZone = ngZone;
        this.currentLang = this.translateSvc.currentLang;
        this.trackByAttributeTranslations = trackByAttributeTranslations;
        this.isExpanded = false;
        this.dataSourceIcon = {
            Page: 'language',
            Email: 'email',
            Form: 'web',
            CrmStatus: 'event_available',
            ProfilePage: 'account_circle',
            Workflow: 'dataset_outline',
        };
        this.dataSourceColor = {
            Page: '#4C83FF',
            Email: '#FF786A',
            Form: '#FEB002',
            CrmStatus: '#98CA71',
            ProfilePage: '#0F1A43',
            Workflow: '#5D5FEF',
        };
    }
    async ngOnInit() {
        if (this.property &&
            this.controller.dataProvider &&
            this.eventId &&
            this.workflowId) {
            this.attributeTranslations =
                await this.fieldSvc.getFieldDataSourceTranslations(this.property.datasource, this.controller.dataProvider, {
                    eventId: this.eventId,
                    workflowId: this.workflowId,
                });
        }
    }
    async onSelectOpen() {
        this.isExpanded = !this.isExpanded;
        this.selectElement?.close();
    }
    onItemSelected(itemTranslation) {
        if (this.control) {
            this.control.markAsDirty();
            if (this.control instanceof FormArray) {
                const arrayValues = this.control.value;
                const shouldAdd = !arrayValues.includes(itemTranslation.value);
                if (shouldAdd) {
                    this.control.push(new FormControl(itemTranslation.value));
                }
                else {
                    const index = arrayValues.findIndex((value) => value === itemTranslation.value);
                    this.control.removeAt(index);
                }
            }
            else {
                // single select
                this.control.setValue(itemTranslation.value);
                this.isExpanded = false;
            }
        }
    }
    isValueEmpty(controlValue) {
        return !(this.property?.type === 'multiselect' &&
            controlValue instanceof Array
            ? controlValue.length > 0
            : controlValue);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: WorkflowBuilderNodeFormFieldSelectComponent, deps: [{ token: i1.AzavistaWorkflowBuilderFormFieldService }, { token: i2.AzavistaWorkflowBuilderController }, { token: i3.TranslateService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.10", type: WorkflowBuilderNodeFormFieldSelectComponent, selector: "azavista-workflow-builder-node-form-field-select", inputs: { property: "property" }, viewQueries: [{ propertyName: "selectElement", first: true, predicate: ["selectElement"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<mat-expansion-panel\r\n  *ngIf=\"control && property\"\r\n  [(expanded)]=\"isExpanded\"\r\n  [class.mat-expansion-panel-field-not-empty]=\"\r\n    property.type === 'multiselect'\r\n      ? $any(control.value).length > 0\r\n      : control.value\r\n  \"\r\n  [class.mat-expansion-panel-field-valid]=\"control.valid\"\r\n>\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>\r\n      <mat-form-field *ngIf=\"attributeTranslations\"\r\n        appearance=\"outline\"\r\n        [hideRequiredMarker]=\"false\"\r\n        [class.mat-form-field-mandatory]=\"property.mandatory\"\r\n        [class.mat-form-field-not-empty]=\"\r\n          property.type === 'multiselect'\r\n            ? $any(control.value).length > 0\r\n            : control.value\r\n        \"\r\n      >\r\n        <mat-label>{{ property.label | translate }}</mat-label>\r\n        <mat-icon\r\n          *ngIf=\"\r\n            property.type === 'multiselect'\r\n              ? $any(control.value).length > 0\r\n              : control.value\r\n          \"\r\n          matPrefix\r\n          [style.color]=\"dataSourceColor[property.datasource] + ' !important'\"\r\n          >{{ dataSourceIcon[property.datasource] }}</mat-icon\r\n        >\r\n\r\n        <mat-select\r\n          [required]=\"property.mandatory\"\r\n          #selectElement\r\n          (opened)=\"onSelectOpen()\"\r\n          [value]=\"control.value\"\r\n          [multiple]=\"property.type === 'multiselect'\"\r\n          [panelClass]=\"'panel-select-' + property.attribute\"\r\n          placeholder=\"{{ property.label | translate }}\"\r\n        >\r\n          <mat-option\r\n            *ngFor=\"\r\n              let item of attributeTranslations;\r\n              trackBy: trackByAttributeTranslations\r\n            \"\r\n            [value]=\"item.value\"\r\n            >{{ item.trans[currentLang] }}</mat-option\r\n          >\r\n        </mat-select>\r\n        <mat-error *ngIf=\"!control.valid\"></mat-error>\r\n      </mat-form-field>\r\n    </mat-panel-title>\r\n  </mat-expansion-panel-header>\r\n\r\n  <mat-selection-list\r\n    [multiple]=\"property.type === 'multiselect'\"\r\n    color=\"primary\"\r\n  >\r\n    <mat-list-option\r\n      *ngFor=\"\r\n        let item of attributeTranslations;\r\n        trackBy: trackByAttributeTranslations\r\n      \"\r\n      (click)=\"onItemSelected(item)\"\r\n      [value]=\"item.value\"\r\n      [selected]=\"$any(control.value)?.includes?.(item.value)\"\r\n    >\r\n      {{ item.trans[currentLang] }}\r\n    </mat-list-option>\r\n  </mat-selection-list>\r\n</mat-expansion-panel>\r\n", styles: [":host{display:block;--mat-expansion-header-collapsed-state-height: 2em;--mat-expansion-header-expanded-state-height: 2em}mat-expansion-panel.mat-expansion-panel{box-shadow:none}mat-expansion-panel.mat-expansion-panel ::ng-deep .mat-expansion-panel-body{padding:0}mat-expansion-panel.mat-expansion-panel ::ng-deep .mat-mdc-list-base.mat-mdc-selection-list{--mdc-list-list-item-label-text-font: inherit;--mdc-list-list-item-label-text-line-height: 2em;--mdc-list-list-item-label-text-size: 1em;--mdc-list-list-item-one-line-container-height: 3em;--mdc-list-list-item-two-line-container-height: 5em;--mdc-list-list-item-three-line-container-height: 7em}mat-expansion-panel.mat-expansion-panel ::ng-deep .mat-mdc-list-base.mat-mdc-selection-list .mat-mdc-list-item{border-radius:0;border-top:1px solid #ccc;margin-bottom:0!important}mat-expansion-panel.mat-expansion-panel.mat-expansion-panel-field-not-empty.mat-expansion-panel-field-valid{--mdc-outlined-text-field-outline-color: #4caf50;border:1px solid var(--mdc-outlined-text-field-outline-color)!important}mat-expansion-panel-header{padding:0;background-color:#fff!important;height:min-content}mat-expansion-panel-header ::ng-deep .mdc-text-field--outlined{--mdc-outlined-text-field-outline-width: 0px}mat-expansion-panel-header ::ng-deep .mat-expansion-indicator{padding:4px 1em}mat-expansion-panel-header ::ng-deep .mdc-notched-outline__notch{display:flex}mat-expansion-panel-header mat-select,mat-expansion-panel-header mat-form-field{pointer-events:none}.mat-icon{font-size:14px;line-height:1em;width:1em;height:1em;padding:.5em}\n"], dependencies: [{ kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i5.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i5.MatLabel, selector: "mat-label" }, { kind: "directive", type: i5.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "directive", type: i5.MatPrefix, selector: "[matPrefix], [matIconPrefix], [matTextPrefix]", inputs: ["matTextPrefix"] }, { kind: "component", type: i6.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i7.MatExpansionPanel, selector: "mat-expansion-panel", inputs: ["disabled", "expanded", "hideToggle", "togglePosition"], outputs: ["opened", "closed", "expandedChange", "afterExpand", "afterCollapse"], exportAs: ["matExpansionPanel"] }, { kind: "component", type: i7.MatExpansionPanelHeader, selector: "mat-expansion-panel-header", inputs: ["tabIndex", "expandedHeight", "collapsedHeight"] }, { kind: "directive", type: i7.MatExpansionPanelTitle, selector: "mat-panel-title" }, { kind: "component", type: i8.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex", "panelWidth", "hideSingleSelectionIndicator"], exportAs: ["matSelect"] }, { kind: "component", type: i9.MatOption, selector: "mat-option", exportAs: ["matOption"] }, { kind: "component", type: i10.MatSelectionList, selector: "mat-selection-list", inputs: ["color", "compareWith", "multiple", "hideSingleSelectionIndicator", "disabled"], outputs: ["selectionChange"], exportAs: ["matSelectionList"] }, { kind: "component", type: i10.MatListOption, selector: "mat-list-option", inputs: ["togglePosition", "checkboxPosition", "color", "value", "selected"], outputs: ["selectedChange"], exportAs: ["matListOption"] }, { kind: "pipe", type: i3.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: WorkflowBuilderNodeFormFieldSelectComponent, decorators: [{
            type: Component,
            args: [{ selector: 'azavista-workflow-builder-node-form-field-select', template: "<mat-expansion-panel\r\n  *ngIf=\"control && property\"\r\n  [(expanded)]=\"isExpanded\"\r\n  [class.mat-expansion-panel-field-not-empty]=\"\r\n    property.type === 'multiselect'\r\n      ? $any(control.value).length > 0\r\n      : control.value\r\n  \"\r\n  [class.mat-expansion-panel-field-valid]=\"control.valid\"\r\n>\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>\r\n      <mat-form-field *ngIf=\"attributeTranslations\"\r\n        appearance=\"outline\"\r\n        [hideRequiredMarker]=\"false\"\r\n        [class.mat-form-field-mandatory]=\"property.mandatory\"\r\n        [class.mat-form-field-not-empty]=\"\r\n          property.type === 'multiselect'\r\n            ? $any(control.value).length > 0\r\n            : control.value\r\n        \"\r\n      >\r\n        <mat-label>{{ property.label | translate }}</mat-label>\r\n        <mat-icon\r\n          *ngIf=\"\r\n            property.type === 'multiselect'\r\n              ? $any(control.value).length > 0\r\n              : control.value\r\n          \"\r\n          matPrefix\r\n          [style.color]=\"dataSourceColor[property.datasource] + ' !important'\"\r\n          >{{ dataSourceIcon[property.datasource] }}</mat-icon\r\n        >\r\n\r\n        <mat-select\r\n          [required]=\"property.mandatory\"\r\n          #selectElement\r\n          (opened)=\"onSelectOpen()\"\r\n          [value]=\"control.value\"\r\n          [multiple]=\"property.type === 'multiselect'\"\r\n          [panelClass]=\"'panel-select-' + property.attribute\"\r\n          placeholder=\"{{ property.label | translate }}\"\r\n        >\r\n          <mat-option\r\n            *ngFor=\"\r\n              let item of attributeTranslations;\r\n              trackBy: trackByAttributeTranslations\r\n            \"\r\n            [value]=\"item.value\"\r\n            >{{ item.trans[currentLang] }}</mat-option\r\n          >\r\n        </mat-select>\r\n        <mat-error *ngIf=\"!control.valid\"></mat-error>\r\n      </mat-form-field>\r\n    </mat-panel-title>\r\n  </mat-expansion-panel-header>\r\n\r\n  <mat-selection-list\r\n    [multiple]=\"property.type === 'multiselect'\"\r\n    color=\"primary\"\r\n  >\r\n    <mat-list-option\r\n      *ngFor=\"\r\n        let item of attributeTranslations;\r\n        trackBy: trackByAttributeTranslations\r\n      \"\r\n      (click)=\"onItemSelected(item)\"\r\n      [value]=\"item.value\"\r\n      [selected]=\"$any(control.value)?.includes?.(item.value)\"\r\n    >\r\n      {{ item.trans[currentLang] }}\r\n    </mat-list-option>\r\n  </mat-selection-list>\r\n</mat-expansion-panel>\r\n", styles: [":host{display:block;--mat-expansion-header-collapsed-state-height: 2em;--mat-expansion-header-expanded-state-height: 2em}mat-expansion-panel.mat-expansion-panel{box-shadow:none}mat-expansion-panel.mat-expansion-panel ::ng-deep .mat-expansion-panel-body{padding:0}mat-expansion-panel.mat-expansion-panel ::ng-deep .mat-mdc-list-base.mat-mdc-selection-list{--mdc-list-list-item-label-text-font: inherit;--mdc-list-list-item-label-text-line-height: 2em;--mdc-list-list-item-label-text-size: 1em;--mdc-list-list-item-one-line-container-height: 3em;--mdc-list-list-item-two-line-container-height: 5em;--mdc-list-list-item-three-line-container-height: 7em}mat-expansion-panel.mat-expansion-panel ::ng-deep .mat-mdc-list-base.mat-mdc-selection-list .mat-mdc-list-item{border-radius:0;border-top:1px solid #ccc;margin-bottom:0!important}mat-expansion-panel.mat-expansion-panel.mat-expansion-panel-field-not-empty.mat-expansion-panel-field-valid{--mdc-outlined-text-field-outline-color: #4caf50;border:1px solid var(--mdc-outlined-text-field-outline-color)!important}mat-expansion-panel-header{padding:0;background-color:#fff!important;height:min-content}mat-expansion-panel-header ::ng-deep .mdc-text-field--outlined{--mdc-outlined-text-field-outline-width: 0px}mat-expansion-panel-header ::ng-deep .mat-expansion-indicator{padding:4px 1em}mat-expansion-panel-header ::ng-deep .mdc-notched-outline__notch{display:flex}mat-expansion-panel-header mat-select,mat-expansion-panel-header mat-form-field{pointer-events:none}.mat-icon{font-size:14px;line-height:1em;width:1em;height:1em;padding:.5em}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.AzavistaWorkflowBuilderFormFieldService }, { type: i2.AzavistaWorkflowBuilderController }, { type: i3.TranslateService }, { type: i0.NgZone }]; }, propDecorators: { property: [{
                type: Input
            }], selectElement: [{
                type: ViewChild,
                args: ['selectElement']
            }] } });
//# sourceMappingURL=data:application/json;base64,