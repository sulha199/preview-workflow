import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "../workflow-builder-process-builder/workflow-builder-process-builder.component";
export class WorkflowBuilderProcessBuilderDialogComponent {
    constructor(data, dialogRef) {
        this.data = data;
        this.dialogRef = dialogRef;
    }
    onStepsSaved(steps) {
        this.dialogRef.close(steps);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: WorkflowBuilderProcessBuilderDialogComponent, deps: [{ token: MAT_DIALOG_DATA }, { token: i1.MatDialogRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.10", type: WorkflowBuilderProcessBuilderDialogComponent, selector: "azavista-workflow-builder-process-builder-dialog", ngImport: i0, template: "<div mat-dialog-content>\r\n  <azavista-workflow-builder-process-builder\r\n    [eventId]=\"data.eventId\"\r\n    [fullProcess]=\"data.fullProcess\"\r\n    [getAclObjectForCurrentUser]=\"data.getAclObjectForCurrentUser\"\r\n    [processType]=\"data.processType\"\r\n    [showOnlyFlowBuilder]=\"data.showOnlyFlowBuilder\"\r\n    (stepsSaved)=\"onStepsSaved($event)\"\r\n  ></azavista-workflow-builder-process-builder>\r\n</div>\r\n", styles: [":host{display:block}\n"], dependencies: [{ kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "component", type: i2.WorkflowBuilderProcessBuilderComponent, selector: "azavista-workflow-builder-process-builder", inputs: ["eventId", "getAclObjectForCurrentUser", "fullProcess", "showOnlyFlowBuilder", "processType"], outputs: ["stepsSaved"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: WorkflowBuilderProcessBuilderDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'azavista-workflow-builder-process-builder-dialog', template: "<div mat-dialog-content>\r\n  <azavista-workflow-builder-process-builder\r\n    [eventId]=\"data.eventId\"\r\n    [fullProcess]=\"data.fullProcess\"\r\n    [getAclObjectForCurrentUser]=\"data.getAclObjectForCurrentUser\"\r\n    [processType]=\"data.processType\"\r\n    [showOnlyFlowBuilder]=\"data.showOnlyFlowBuilder\"\r\n    (stepsSaved)=\"onStepsSaved($event)\"\r\n  ></azavista-workflow-builder-process-builder>\r\n</div>\r\n", styles: [":host{display:block}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i1.MatDialogRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ya2Zsb3ctYnVpbGRlci1wcm9jZXNzLWJ1aWxkZXItZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2F6YXZpc3RhL3dvcmtmbG93LWJ1aWxkZXIvc3JjL2xpYi9jb21wb25lbnRzL3dvcmtmbG93LWJ1aWxkZXItcHJvY2Vzcy1idWlsZGVyLWRpYWxvZy93b3JrZmxvdy1idWlsZGVyLXByb2Nlc3MtYnVpbGRlci1kaWFsb2cuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYXphdmlzdGEvd29ya2Zsb3ctYnVpbGRlci9zcmMvbGliL2NvbXBvbmVudHMvd29ya2Zsb3ctYnVpbGRlci1wcm9jZXNzLWJ1aWxkZXItZGlhbG9nL3dvcmtmbG93LWJ1aWxkZXItcHJvY2Vzcy1idWlsZGVyLWRpYWxvZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZUFBZSxFQUFnQixNQUFNLDBCQUEwQixDQUFDOzs7O0FBa0J6RSxNQUFNLE9BQU8sNENBQTRDO0lBQ3JELFlBRVcsSUFBNkMsRUFDNUMsU0FHUDtRQUpNLFNBQUksR0FBSixJQUFJLENBQXlDO1FBQzVDLGNBQVMsR0FBVCxTQUFTLENBR2hCO0lBQ0YsQ0FBQztJQUVKLFlBQVksQ0FBQyxLQUFhO1FBQ3RCLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7K0dBWlEsNENBQTRDLGtCQUV6QyxlQUFlO21HQUZsQiw0Q0FBNEMsd0ZDbkJ6RCxnYkFVQTs7NEZEU2EsNENBQTRDO2tCQUx4RCxTQUFTOytCQUNJLGtEQUFrRDs7MEJBTXZELE1BQU07MkJBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEsIE1hdERpYWxvZ1JlZiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQgeyBTdGVwIH0gZnJvbSAnQGF6YXZpc3RhL3NlcnZpY2VsaWInO1xuaW1wb3J0IHsgV29ya2Zsb3dCdWlsZGVyUHJvY2Vzc0J1aWxkZXJDb21wb25lbnQgfSBmcm9tICcuLi93b3JrZmxvdy1idWlsZGVyLXByb2Nlc3MtYnVpbGRlci93b3JrZmxvdy1idWlsZGVyLXByb2Nlc3MtYnVpbGRlci5jb21wb25lbnQnO1xuXG5leHBvcnQgdHlwZSBXb3JrZmxvd0J1aWxkZXJQcm9jZXNzQnVpbGRlckRpYWxvZ0RhdGEgPSBQaWNrPFxuICAgIFdvcmtmbG93QnVpbGRlclByb2Nlc3NCdWlsZGVyQ29tcG9uZW50LFxuICAgIHwgJ2V2ZW50SWQnXG4gICAgfCAnZ2V0QWNsT2JqZWN0Rm9yQ3VycmVudFVzZXInXG4gICAgfCAnZnVsbFByb2Nlc3MnXG4gICAgfCAnc2hvd09ubHlGbG93QnVpbGRlcidcbiAgICB8ICdwcm9jZXNzVHlwZSdcbj47XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYXphdmlzdGEtd29ya2Zsb3ctYnVpbGRlci1wcm9jZXNzLWJ1aWxkZXItZGlhbG9nJyxcbiAgICB0ZW1wbGF0ZVVybDogYC4vd29ya2Zsb3ctYnVpbGRlci1wcm9jZXNzLWJ1aWxkZXItZGlhbG9nLmNvbXBvbmVudC5odG1sYCxcbiAgICBzdHlsZVVybHM6IFsnLi93b3JrZmxvdy1idWlsZGVyLXByb2Nlc3MtYnVpbGRlci1kaWFsb2cuY29tcG9uZW50LmNzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBXb3JrZmxvd0J1aWxkZXJQcm9jZXNzQnVpbGRlckRpYWxvZ0NvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKVxuICAgICAgICBwdWJsaWMgZGF0YTogV29ya2Zsb3dCdWlsZGVyUHJvY2Vzc0J1aWxkZXJEaWFsb2dEYXRhLFxuICAgICAgICBwcml2YXRlIGRpYWxvZ1JlZjogTWF0RGlhbG9nUmVmPFxuICAgICAgICAgICAgV29ya2Zsb3dCdWlsZGVyUHJvY2Vzc0J1aWxkZXJEaWFsb2dEYXRhLFxuICAgICAgICAgICAgU3RlcFtdXG4gICAgICAgID4sXG4gICAgKSB7fVxuXG4gICAgb25TdGVwc1NhdmVkKHN0ZXBzOiBTdGVwW10pIHtcbiAgICAgICAgdGhpcy5kaWFsb2dSZWYuY2xvc2Uoc3RlcHMpO1xuICAgIH1cbn1cbiIsIjxkaXYgbWF0LWRpYWxvZy1jb250ZW50PlxyXG4gIDxhemF2aXN0YS13b3JrZmxvdy1idWlsZGVyLXByb2Nlc3MtYnVpbGRlclxyXG4gICAgW2V2ZW50SWRdPVwiZGF0YS5ldmVudElkXCJcclxuICAgIFtmdWxsUHJvY2Vzc109XCJkYXRhLmZ1bGxQcm9jZXNzXCJcclxuICAgIFtnZXRBY2xPYmplY3RGb3JDdXJyZW50VXNlcl09XCJkYXRhLmdldEFjbE9iamVjdEZvckN1cnJlbnRVc2VyXCJcclxuICAgIFtwcm9jZXNzVHlwZV09XCJkYXRhLnByb2Nlc3NUeXBlXCJcclxuICAgIFtzaG93T25seUZsb3dCdWlsZGVyXT1cImRhdGEuc2hvd09ubHlGbG93QnVpbGRlclwiXHJcbiAgICAoc3RlcHNTYXZlZCk9XCJvblN0ZXBzU2F2ZWQoJGV2ZW50KVwiXHJcbiAgPjwvYXphdmlzdGEtd29ya2Zsb3ctYnVpbGRlci1wcm9jZXNzLWJ1aWxkZXI+XHJcbjwvZGl2PlxyXG4iXX0=