import { Component, HostListener } from '@angular/core';
import { firstValueFrom } from 'rxjs';
import { PALETTE_CATEGORIES_MAP, PALETTE_CATEGORIES_ORDER, WORKFLOW_NAME_TRANSLATIONS, } from '../../types';
import { getNodeModelForPalette } from '../../utils';
import * as i0 from "@angular/core";
import * as i1 from "@azavista/components/shared";
import * as i2 from "../../services/workflow-builder.service";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/input";
import * as i5 from "@syncfusion/ej2-angular-diagrams";
import * as i6 from "@angular/common";
import * as i7 from "@ngx-translate/core";
import * as i8 from "../../pipes/apply-function.pipe";
export class WorkflowBuilderPaletteComponent {
    constructor(sharedSvc, ngZone, builderService) {
        this.sharedSvc = sharedSvc;
        this.ngZone = ngZone;
        this.builderService = builderService;
        this.palettes = [];
        this.paletteCategories = PALETTE_CATEGORIES_ORDER;
        this.expandMode = 'Multiple';
        this.paletteCategoryMap = PALETTE_CATEGORIES_MAP;
        this.trackByString = (index, data) => data;
        this.getPalettesFromPaletteCategories = async (searchText) => {
            await firstValueFrom(this.builderService.translationsLoaded());
            return PALETTE_CATEGORIES_ORDER.map((category) => this.getPaletteModelFromPaletteCategory(searchText, category));
        };
        /** `getSymbolInfo` should use arrow-function instead of method, because the method later is bind with syncfusion instead of current component  */
        this.getSymbolInfo = (
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        symbol) => {
            return {
                fit: true,
                width: 100,
                height: 80,
                tooltip: ' ',
                description: {
                    text: '',
                    wrap: 'Wrap',
                    overflow: 'Wrap',
                    margin: {
                        left: 0,
                        right: 0,
                        top: 0,
                        bottom: 0,
                    },
                },
            };
        };
        this.getPaletteModelFromPaletteCategory = (searchText, category) => {
            const symbols = this.paletteCategoryMap[category]
                ?.filter((paletteSymbol) => this.isWorkflowNameContainsSearchText(searchText, paletteSymbol))
                ?.map((paletteSymbol) => getNodeModelForPalette(paletteSymbol, this.sharedSvc)) ?? [];
            const paletteModel = {
                id: category,
                title: `${this.sharedSvc.translate(category)} ${searchText ? `(${symbols?.length ?? 0})` : ''}`,
                expanded: true,
                symbols,
            };
            return paletteModel;
        };
        this.isWorkflowNameContainsSearchText = (searchText, paletteSymbol) => {
            return this.sharedSvc
                .translate(WORKFLOW_NAME_TRANSLATIONS[paletteSymbol])
                .toLowerCase()
                ?.includes(searchText.toLowerCase());
        };
        this.getPalettesFromPaletteCategories('').then((palettes) => {
            this.palettes = palettes;
        });
    }
    onHostClick(event) {
        const srcElement = event.srcElement;
        const paletteCategoryHeaderEl = this.getPaletteCategoryHeaderElementFromParent(srcElement);
        if (paletteCategoryHeaderEl) {
            const paletteCategoryContainerEl = this.getPaletteCategoryContainerElementFromParent(paletteCategoryHeaderEl);
            paletteCategoryContainerEl?.classList.toggle('e-acrdn-item--hide-content');
        }
    }
    getPaletteCategoryHeaderElementFromParent(element) {
        if (element.classList.contains('e-acrdn-header')) {
            return element;
        }
        if (this.isElementPaletteCategoryContainer(element) ||
            this.isElementHostContainer(element)) {
            return null;
        }
        return element.parentElement
            ? this.getPaletteCategoryHeaderElementFromParent(element.parentElement)
            : null;
    }
    getPaletteCategoryContainerElementFromParent(element) {
        if (this.isElementPaletteCategoryContainer(element)) {
            return element;
        }
        if (this.isElementHostContainer(element)) {
            return null;
        }
        return element.parentElement
            ? this.getPaletteCategoryContainerElementFromParent(element.parentElement)
            : null;
    }
    isElementHostContainer(element) {
        return (element.tagName ===
            'azavista-workflow-builder-workflow-builder-palette');
    }
    isElementPaletteCategoryContainer(element) {
        return element.classList.contains('e-acrdn-item');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: WorkflowBuilderPaletteComponent, deps: [{ token: i1.AzavistaSharedService }, { token: i0.NgZone }, { token: i2.WorkflowBuilderService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.10", type: WorkflowBuilderPaletteComponent, selector: "azavista-workflow-builder-workflow-builder-palette", host: { listeners: { "click": "onHostClick($event)" } }, ngImport: i0, template: "<mat-form-field>\n  <input #searchText matInput [placeholder]=\"'TYPE_TO_FILTER_BLOCKS' | translate\" />\n</mat-form-field>\n\n<ejs-symbolpalette\n  #symbolpalette\n  id=\"symbolpalette\"\n  [enableAnimation]=\"true\"\n  [expandMode]=\"expandMode\"\n  [palettes]=\"searchText.value| apply : getPalettesFromPaletteCategories | async\"\n  [getSymbolInfo]=\"getSymbolInfo\"\n>\n</ejs-symbolpalette>\n", styles: [":host{display:flex;flex-direction:column;position:relative;overflow:visible;font-size:12px;height:100%}:host ::ng-deep *{font-size:12px}.mat-mdc-form-field-infix{min-height:36px}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:18px}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY( -24.75px) scale(var(--mat-mdc-form-field-floating-label-scale, .75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}.mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label{display:none}mat-form-field{width:100%;padding:.5em 10px 1em;box-sizing:border-box}mat-form-field ::ng-deep .mat-mdc-text-field-wrapper{background-color:#fff;border-radius:0!important}mat-form-field ::ng-deep .mat-mdc-form-field-flex{height:auto!important;max-height:unset!important}mat-form-field ::ng-deep .mat-mdc-text-field-wrapper.mdc-text-field--outlined{height:auto!important;max-height:unset!important}mat-form-field ::ng-deep .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding:8px 0!important;min-height:auto}ejs-symbolpalette{display:block;position:relative;overflow:auto;margin-top:-4px}ejs-symbolpalette ::ng-deep .e-acrdn-header{display:flex;align-items:center;justify-content:space-between;background-color:#fff!important;margin:0 10px;border:1px solid #a6a6a6;border-radius:4px;padding:4px 10px;font-weight:500;color:#666;cursor:pointer}ejs-symbolpalette ::ng-deep .e-acrdn-content{min-height:2em}ejs-symbolpalette ::ng-deep .e-acrdn-content .e-symbol-draggable{cursor:grab}ejs-symbolpalette ::ng-deep .e-remove-palette{animation:.3s;overflow:hidden}ejs-symbolpalette ::ng-deep .e-toggle-icon{animation:.3s}ejs-symbolpalette ::ng-deep .e-tgl-collapse-icon.e-icons:before{font-family:Material Icons;content:\"\\e5c7\";font-size:2em;line-height:1em;animation:.3s}ejs-symbolpalette ::ng-deep .e-acrdn-item.e-acrdn-item--hide-content .e-toggle-icon{transform:rotate(180deg)}ejs-symbolpalette ::ng-deep .e-acrdn-item.e-acrdn-item--hide-content .e-remove-palette{height:0px;opacity:0}::ng-deep .e-symbol-draggable>canvas{background-color:#fff}::ng-deep .e-html-layer{border-radius:2px;box-shadow:0 0 2px #0000009c}::ng-deep .palette-item{box-sizing:border-box;display:flex;flex-direction:column;gap:4px;position:relative;width:100%;height:100%;padding:2px 4px;align-items:center;justify-content:space-evenly}::ng-deep .palette-item__inner{display:block;position:relative;width:40px;height:40px;border-radius:4px;align-items:center;box-sizing:border-box;color:transparent}::ng-deep .palette-item__title{font-size:10px;text-align:center;margin:0 auto}::ng-deep .palette-item__icon{color:#a6a6a6;font-size:40px;margin:auto;position:absolute}::ng-deep .palette-item__input,::ng-deep .palette-item__output,::ng-deep .palette-item__decline-input,::ng-deep .palette-item__decline-output,::ng-deep .palette-item__cancellation-input,::ng-deep .palette-item__cancellation-output{display:block;border-radius:50%;background-color:#fff;border:1px solid #a6a6a6;height:4.9px;width:4.9px;position:absolute;top:50%;transform:translateY(-50%)}::ng-deep .palette-item__input{left:2px}::ng-deep .palette-item__output{border-color:#bbb;right:0}::ng-deep .palette-item__decline-input,::ng-deep .palette-item__cancellation-input{top:4px;left:50%;transform:translateY(-50%) translate(-40%)}::ng-deep .palette-item__decline-output,::ng-deep .palette-item__cancellation-output{top:100%;left:50%;transform:translateY(-100%) translate(-50%)}::ng-deep #create-work-block_container{pointer-events:none;opacity:.5}mat-expansion-panel{border:none!important;background:transparent;box-shadow:none!important;margin:0}mat-expansion-panel ::ng-deep .mat-expansion-panel-body{padding:0}.mat-expansion-panel-header{background-color:#fff!important;margin:0 10px;border:1px solid #a6a6a6}\n"], dependencies: [{ kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i5.SymbolPaletteComponent, selector: "ejs-symbolpalette", inputs: ["accessKey", "allowDrag", "connectorDefaults", "enableAnimation", "enablePersistence", "enableRtl", "enableSearch", "expandMode", "filterSymbols", "getConnectorDefaults", "getNodeDefaults", "getSymbolInfo", "getSymbolTemplate", "height", "ignoreSymbolsOnSearch", "locale", "nodeDefaults", "palettes", "symbolDragSize", "symbolHeight", "symbolInfo", "symbolMargin", "symbolPreview", "symbolWidth", "width"], outputs: ["paletteExpanding", "paletteSelectionChange"] }, { kind: "pipe", type: i6.AsyncPipe, name: "async" }, { kind: "pipe", type: i7.TranslatePipe, name: "translate" }, { kind: "pipe", type: i8.ApplyFunctionPipe, name: "apply" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: WorkflowBuilderPaletteComponent, decorators: [{
            type: Component,
            args: [{ selector: 'azavista-workflow-builder-workflow-builder-palette', template: "<mat-form-field>\n  <input #searchText matInput [placeholder]=\"'TYPE_TO_FILTER_BLOCKS' | translate\" />\n</mat-form-field>\n\n<ejs-symbolpalette\n  #symbolpalette\n  id=\"symbolpalette\"\n  [enableAnimation]=\"true\"\n  [expandMode]=\"expandMode\"\n  [palettes]=\"searchText.value| apply : getPalettesFromPaletteCategories | async\"\n  [getSymbolInfo]=\"getSymbolInfo\"\n>\n</ejs-symbolpalette>\n", styles: [":host{display:flex;flex-direction:column;position:relative;overflow:visible;font-size:12px;height:100%}:host ::ng-deep *{font-size:12px}.mat-mdc-form-field-infix{min-height:36px}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:18px}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY( -24.75px) scale(var(--mat-mdc-form-field-floating-label-scale, .75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}.mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label{display:none}mat-form-field{width:100%;padding:.5em 10px 1em;box-sizing:border-box}mat-form-field ::ng-deep .mat-mdc-text-field-wrapper{background-color:#fff;border-radius:0!important}mat-form-field ::ng-deep .mat-mdc-form-field-flex{height:auto!important;max-height:unset!important}mat-form-field ::ng-deep .mat-mdc-text-field-wrapper.mdc-text-field--outlined{height:auto!important;max-height:unset!important}mat-form-field ::ng-deep .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding:8px 0!important;min-height:auto}ejs-symbolpalette{display:block;position:relative;overflow:auto;margin-top:-4px}ejs-symbolpalette ::ng-deep .e-acrdn-header{display:flex;align-items:center;justify-content:space-between;background-color:#fff!important;margin:0 10px;border:1px solid #a6a6a6;border-radius:4px;padding:4px 10px;font-weight:500;color:#666;cursor:pointer}ejs-symbolpalette ::ng-deep .e-acrdn-content{min-height:2em}ejs-symbolpalette ::ng-deep .e-acrdn-content .e-symbol-draggable{cursor:grab}ejs-symbolpalette ::ng-deep .e-remove-palette{animation:.3s;overflow:hidden}ejs-symbolpalette ::ng-deep .e-toggle-icon{animation:.3s}ejs-symbolpalette ::ng-deep .e-tgl-collapse-icon.e-icons:before{font-family:Material Icons;content:\"\\e5c7\";font-size:2em;line-height:1em;animation:.3s}ejs-symbolpalette ::ng-deep .e-acrdn-item.e-acrdn-item--hide-content .e-toggle-icon{transform:rotate(180deg)}ejs-symbolpalette ::ng-deep .e-acrdn-item.e-acrdn-item--hide-content .e-remove-palette{height:0px;opacity:0}::ng-deep .e-symbol-draggable>canvas{background-color:#fff}::ng-deep .e-html-layer{border-radius:2px;box-shadow:0 0 2px #0000009c}::ng-deep .palette-item{box-sizing:border-box;display:flex;flex-direction:column;gap:4px;position:relative;width:100%;height:100%;padding:2px 4px;align-items:center;justify-content:space-evenly}::ng-deep .palette-item__inner{display:block;position:relative;width:40px;height:40px;border-radius:4px;align-items:center;box-sizing:border-box;color:transparent}::ng-deep .palette-item__title{font-size:10px;text-align:center;margin:0 auto}::ng-deep .palette-item__icon{color:#a6a6a6;font-size:40px;margin:auto;position:absolute}::ng-deep .palette-item__input,::ng-deep .palette-item__output,::ng-deep .palette-item__decline-input,::ng-deep .palette-item__decline-output,::ng-deep .palette-item__cancellation-input,::ng-deep .palette-item__cancellation-output{display:block;border-radius:50%;background-color:#fff;border:1px solid #a6a6a6;height:4.9px;width:4.9px;position:absolute;top:50%;transform:translateY(-50%)}::ng-deep .palette-item__input{left:2px}::ng-deep .palette-item__output{border-color:#bbb;right:0}::ng-deep .palette-item__decline-input,::ng-deep .palette-item__cancellation-input{top:4px;left:50%;transform:translateY(-50%) translate(-40%)}::ng-deep .palette-item__decline-output,::ng-deep .palette-item__cancellation-output{top:100%;left:50%;transform:translateY(-100%) translate(-50%)}::ng-deep #create-work-block_container{pointer-events:none;opacity:.5}mat-expansion-panel{border:none!important;background:transparent;box-shadow:none!important;margin:0}mat-expansion-panel ::ng-deep .mat-expansion-panel-body{padding:0}.mat-expansion-panel-header{background-color:#fff!important;margin:0 10px;border:1px solid #a6a6a6}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.AzavistaSharedService }, { type: i0.NgZone }, { type: i2.WorkflowBuilderService }]; }, propDecorators: { onHostClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,