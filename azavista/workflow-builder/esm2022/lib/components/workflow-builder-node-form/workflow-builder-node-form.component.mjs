import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, HostListener, Input, Output, ViewChild, } from '@angular/core';
import { omit, } from '@azavista/components/shared';
import { ngResizeObserverProviders, } from 'ng-resize-observer';
import { AzavistaGroupedFieldsComponent } from '@azavista/components/grouped-fields';
import { debounceTime, firstValueFrom } from 'rxjs';
import { getFormDirtyValues, getWorkflowIdFromNodeId, objectKeys, trackByWorkflowProperty, } from '../../utils';
import { WORKFLOW_EXPLANATION_TRANSLATIONS, WORKFLOW_NAME_TRANSLATIONS, } from '../../types';
import * as i0 from "@angular/core";
import * as i1 from "@azavista/components/shared";
import * as i2 from "../../workflow-builder.controller";
import * as i3 from "ng-resize-observer";
import * as i4 from "../../services/workflow-builder.form-field.service";
import * as i5 from "@angular/common";
import * as i6 from "@angular/material/button";
import * as i7 from "@angular/material/icon";
import * as i8 from "@azavista/components/button";
import * as i9 from "../workflow-builder-node-form-header/workflow-builder-node-form-header.component";
import * as i10 from "../workflow-builder-node-form-field-text/workflow-builder-node-form-field-text.component";
import * as i11 from "../workflow-builder-node-form-field-select/workflow-builder-node-form-field-select.component";
import * as i12 from "../workflow-builder-node-form-field-toggle/workflow-builder-node-form-field-toggle.component";
import * as i13 from "../workflow-builder-node-form-field-process/workflow-builder-node-form-field-process.component";
import * as i14 from "@ngx-translate/core";
export class WorkflowBuilderNodeFormComponent {
    get workflowId() {
        return getWorkflowIdFromNodeId(this.node.id);
    }
    get controllerData() {
        return this.controller.dataMap[this.workflowId];
    }
    get isWorkflowValid() {
        return this.controller.validityMap[this.workflowId];
    }
    constructor(sharedSvc, host, controller, resize$, ngZone, formFieldService) {
        this.sharedSvc = sharedSvc;
        this.host = host;
        this.controller = controller;
        this.resize$ = resize$;
        this.ngZone = ngZone;
        this.formFieldService = formFieldService;
        this.attrNodeId = '';
        this.workflowSettingsChanges = new EventEmitter();
        this.canvasChanges = new EventEmitter();
        this.removeNode = new EventEmitter();
        this.properties = [];
        this.fields = [];
        this.trackByWorkflowProperty = trackByWorkflowProperty;
    }
    async ngOnInit() {
        this.attrNodeId = this.node.id;
        const { controllerData } = this;
        if (!controllerData) {
            return;
        }
        this.workflowSettingsGroupedFieldData =
            await this.createWorkflowSettingsGroupFieldData(controllerData);
        this.initFormGroup(controllerData);
        this.canvasGroupFieldData =
            this.createCanvasGroupedFieldsData(controllerData);
        await firstValueFrom(this.ngZone.onStable);
        this.loadFieldsCssClass();
        this.resize$.pipe(debounceTime(50)).subscribe(async () => {
            const rect = this.host.nativeElement.getBoundingClientRect();
            const nodeInstance = this.getNodeInstance();
            if (nodeInstance) {
                nodeInstance.height = rect?.height;
            }
        });
    }
    onKeyDown(event) {
        // prevent when typing on form get treated as moving or deleting workflow item
        event.stopPropagation();
    }
    initFormGroup(controllerData) {
        const { factory } = controllerData;
        this.properties = factory.getProperties();
        this.formGroup = this.formFieldService.getFormGroupFromWorkflowFactory(this.properties, factory);
        this.formGroup.valueChanges.pipe(debounceTime(200)).subscribe(() => {
            this.controller.updateWorkflowSettings(this.workflowId, getFormDirtyValues(this.formGroup));
        });
    }
    async createWorkflowSettingsGroupedFieldFields(factory) {
        const { dataProvider } = this.controller;
        if (!dataProvider) {
            return [];
        }
        return Promise.all(factory.getPropertiesWithSchema().map((property) => {
            return this.formFieldService.getFieldFromWorkflowProperty(property, dataProvider, {
                eventId: this.eventId,
                workflowId: this.workflowId,
            });
        }));
    }
    // eslint-disable-next-line max-len
    async createWorkflowSettingsGroupFieldData(controllerData) {
        const { factory } = controllerData;
        this.properties = factory.getProperties();
        const fields = await this.createWorkflowSettingsGroupedFieldFields(factory);
        this.fields = fields;
        this.workflowItem = factory.getWorkflow();
        return {
            singleColumn: true,
            editModeForAllFields: true,
            disableAutoOrdering: true,
            fieldsOptions: [
                {
                    fieldId: 'sad',
                    options: {},
                },
            ],
            fieldsWithEntity: {
                entity: factory.getWorkflow().settings,
                fields,
            },
            expandPanels: false,
        };
    }
    async toggleExpandPanels() {
        if (this.workflowSettingsGroupedFieldData) {
            this.workflowSettingsGroupedFieldData.expandPanels =
                !this.workflowSettingsGroupedFieldData.expandPanels;
        }
    }
    createCanvasGroupedFieldsData(controllerData) {
        const { name, description, factory: { type }, } = controllerData;
        return {
            expandPanels: true,
            editModeForAllFields: true,
            singleColumn: true,
            disableAutoOrdering: true,
            fieldsWithEntity: {
                fields: this.formFieldService.getCanvasDataFields(type),
                entity: {
                    name: name ??
                        this.sharedSvc.translate(WORKFLOW_NAME_TRANSLATIONS[type]),
                    description: description ??
                        this.sharedSvc.translate(WORKFLOW_EXPLANATION_TRANSLATIONS[type]),
                },
            },
        };
    }
    onUpdateCanvasFields(data) {
        this.canvasChanges.emit(data);
        if (this.canvasGroupFieldData?.fieldsWithEntity.entity) {
            this.canvasGroupFieldData.fieldsWithEntity.entity = {
                ...this.canvasGroupFieldData?.fieldsWithEntity.entity,
                ...data,
            };
        }
    }
    onUpdateWorkflowSettingsFields(data) {
        if (this.workflowSettingsGroupedFieldEl?.invalidFieldsWithValues
            ?.length > 0 ||
            data.obj == null ||
            objectKeys(data.obj).length === 0) {
            return;
        }
        /**
         * We hack the way to display the process button by creating a checkbox as a button.
         * Therefore, we intercept the changes from the process-field and use the checkbox to open a popup
         */
        const workflowProcessProperties = this.controllerData?.factory
            .getProperties()
            .filter(({ type }) => type === 'process') ?? [];
        const isProcessField = workflowProcessProperties.some(({ attribute }) => attribute === data.changedFieldWithValue?.field.id);
        if (isProcessField) {
            this.openProcessPopup();
            return;
        }
        this.workflowSettingsChanges.emit({
            ...data,
            obj: data.obj
                ? omit(data.obj, workflowProcessProperties.map(({ attribute }) => attribute))
                : data.obj,
        });
    }
    loadFieldsCssClass() {
        this.controllerData?.factory.getProperties().forEach((properties) => {
            const { attribute, datasource } = properties;
            if (datasource) {
                this.host.nativeElement
                    .querySelector(`azavista-input-field[field-id=${attribute}]`)
                    ?.classList.add(`datasource-${datasource}`);
            }
        });
    }
    openProcessPopup() {
        alert('Opening Process Popup');
    }
    getNodeInstance() {
        return this.diagramEl.nodes.find(({ id }) => id === this.node.id);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: WorkflowBuilderNodeFormComponent, deps: [{ token: i1.AzavistaSharedService }, { token: i0.ElementRef }, { token: i2.AzavistaWorkflowBuilderController }, { token: i3.NgResizeObserver }, { token: i0.NgZone }, { token: i4.AzavistaWorkflowBuilderFormFieldService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.10", type: WorkflowBuilderNodeFormComponent, selector: "azavista-workflow-builder-node-form", inputs: { node: "node", eventId: "eventId", diagramEl: "diagramEl" }, outputs: { workflowSettingsChanges: "workflowSettingsChanges", canvasChanges: "canvasChanges", removeNode: "removeNode" }, host: { listeners: { "keydown": "onKeyDown($event)" }, properties: { "attr.nodeId": "this.attrNodeId" } }, providers: [...ngResizeObserverProviders], viewQueries: [{ propertyName: "workflowSettingsGroupedFieldEl", first: true, predicate: ["workflowSettingsGroupedField"], descendants: true, read: AzavistaGroupedFieldsComponent }, { propertyName: "formHeader", first: true, predicate: ["formHeader"], descendants: true }], ngImport: i0, template: "<div\r\n  class=\"workflow-builder-node-item\"\r\n  *ngIf=\"workflowSettingsGroupedFieldData && canvasGroupFieldData\"\r\n>\r\n  <azavista-workflow-builder-node-form-header\r\n    #formHeader\r\n    [controllerData]=\"controllerData\"\r\n    (canvasChanges)=\"onUpdateCanvasFields($event)\"\r\n  ></azavista-workflow-builder-node-form-header>\r\n\r\n  <div class=\"workflow-builder-node-item__fields\">\r\n    <ng-container *ngIf=\"workflowSettingsGroupedFieldData.expandPanels\">\r\n      <ng-container\r\n        *ngFor=\"let property of properties; trackBy: trackByWorkflowProperty\"\r\n      >\r\n        <ng-container\r\n          *ngIf=\"formGroup?.controls?.[property.attribute] as formControl\"\r\n        >\r\n          <azavista-workflow-builder-node-form-field-select\r\n            *ngIf=\"\r\n              property.type === 'select' || property.type === 'multiselect'\r\n            \"\r\n            [eventId]=\"eventId\"\r\n            [workflowId]=\"workflowId\"\r\n            [property]=\"property\"\r\n            [control]=\"$any(formControl)\"\r\n          >\r\n          </azavista-workflow-builder-node-form-field-select>\r\n          <azavista-workflow-builder-node-form-field-text\r\n            *ngIf=\"property.type === 'text' || property.type === 'number'\"\r\n            [eventId]=\"eventId\"\r\n            [workflowId]=\"workflowId\"\r\n            [property]=\"$any(property)\"\r\n            [control]=\"$any(formControl)\"\r\n          >\r\n          </azavista-workflow-builder-node-form-field-text>\r\n          <azavista-workflow-builder-node-form-field-toggle\r\n            *ngIf=\"property.type === 'boolean'\"\r\n            [eventId]=\"eventId\"\r\n            [workflowId]=\"workflowId\"\r\n            [property]=\"$any(property)\"\r\n            [control]=\"$any(formControl)\"\r\n          >\r\n          </azavista-workflow-builder-node-form-field-toggle>\r\n          <azavista-workflow-builder-node-form-field-process\r\n            *ngIf=\"property.type === 'process'\"\r\n            [eventId]=\"eventId\"\r\n            [workflowId]=\"workflowId\"\r\n            [property]=\"$any(property)\"\r\n            [control]=\"$any(formControl)\"\r\n          >\r\n          </azavista-workflow-builder-node-form-field-process>\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n  <div\r\n    class=\"workflow-builder-node-item__footer\"\r\n    *ngIf=\"workflowSettingsGroupedFieldData.fieldsWithEntity.fields.length > 0\"\r\n  >\r\n    <azavista-button (click)=\"toggleExpandPanels()\" color=\"primary\">{{\r\n      (workflowSettingsGroupedFieldData.expandPanels\r\n        ? \"CLOSE\"\r\n        : isWorkflowValid\r\n          ? \"OPEN\"\r\n          : \"SETUP\"\r\n      ) | translate\r\n    }}</azavista-button>\r\n  </div>\r\n  <div\r\n    class=\"workflow-builder-node-item__absolute-elements\">\r\n    <button *ngIf=\"!formHeader.editMode\" class=\"workflow-builder-node-item__absolute-elements__button-delete\" mat-icon-button (click)=\"removeNode.emit()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n", styles: [":host{font-size:12px;display:flex;position:relative;width:100%;height:min-content;border:1px solid #ccc;background-color:#f5f4f5;border-radius:4px;padding:1em;box-sizing:border-box}:host ::ng-deep *,:host ::ng-deep .mat-mdc-slide-toggle .mdc-label{font-size:12px;font-family:var(--azavista-font)}:host ::ng-deep .mat-mdc-form-field-infix{min-height:36px}:host ::ng-deep .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:18px}:host ::ng-deep .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY( -24.75px) scale(var(--mat-mdc-form-field-floating-label-scale, .75));transform:var(--mat-mdc-form-field-label-transform)}:host ::ng-deep .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}:host ::ng-deep .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}:host ::ng-deep .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}:host ::ng-deep .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label{display:none}:host ::ng-deep .mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:none}:host ::ng-deep .mat-mdc-form-field{background-color:#fff}:host ::ng-deep .mat-mdc-form-field .mat-mdc-form-field-flex{height:auto!important;max-height:unset!important}:host ::ng-deep .mat-mdc-form-field .mat-mdc-select-arrow-wrapper{display:none}:host ::ng-deep .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined{height:auto!important;max-height:unset!important}:host ::ng-deep .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined:hover{background-color:transparent}:host ::ng-deep .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding:4px 0!important;min-height:auto}:host ::ng-deep .mat-mdc-form-field .mat-mdc-form-field-required-marker{color:var(--palette-warn-500)!important}:host ::ng-deep .mat-mdc-form-field.mat-form-field-not-empty label,:host ::ng-deep .mat-mdc-form-field.mat-focused label{display:none}:host ::ng-deep .mat-mdc-form-field.mat-form-field-not-empty .mdc-notched-outline__notch,:host ::ng-deep .mat-mdc-form-field.mat-focused .mdc-notched-outline__notch{width:0px!important;padding:0}:host ::ng-deep .mat-mdc-form-field.mat-form-field-not-empty:not(.mat-form-field-invalid){--mdc-outlined-text-field-outline-color: #4caf50}.hidden.hidden[class]{display:none}.workflow-builder-node-item{display:flex;flex-direction:column;max-width:100%;width:100%;height:min-content;gap:.8em}.workflow-builder-node-item__fields{display:flex;flex-direction:column;flex:1;gap:.8em}.workflow-builder-node-item__fields ::ng-deep mat-form-field{width:100%}.workflow-builder-node-item__footer{display:flex;flex-direction:column}.workflow-builder-node-item__footer ::ng-deep .azavista-button-component.button-container{width:100%}.workflow-builder-node-item__footer ::ng-deep .azavista-button-component.button-container button{width:inherit;background-color:#98ca71}.workflow-builder-node-item__footer ::ng-deep .azavista-button-component.button-container .mdc-button__label{text-transform:uppercase}.workflow-builder-node-item__absolute-elements>*{position:absolute}.workflow-builder-node-item__absolute-elements__button-delete{--mdc-icon-button-icon-size: 16px;--mdc-icon-button-state-layer-size: 32px;overflow:hidden;top:0;right:0;padding:8px}.workflow-builder-node-item__absolute-elements__button-delete mat-icon{height:1em;width:1em;font-weight:600}\n"], dependencies: [{ kind: "directive", type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i6.MatIconButton, selector: "button[mat-icon-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i7.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i8.AzavistaButtonComponent, selector: "azavista-button", inputs: ["acl", "disabled", "cssClasses", "containerCssClasses"] }, { kind: "component", type: i9.WorkflowBuilderNodeFormHeaderComponent, selector: "azavista-workflow-builder-node-form-header", inputs: ["editMode", "controllerData"], outputs: ["canvasChanges"] }, { kind: "component", type: i10.WorkflowBuilderNodeFormFieldTextComponent, selector: "azavista-workflow-builder-node-form-field-text", inputs: ["property"] }, { kind: "component", type: i11.WorkflowBuilderNodeFormFieldSelectComponent, selector: "azavista-workflow-builder-node-form-field-select", inputs: ["property"] }, { kind: "component", type: i12.WorkflowBuilderNodeFormFieldToggleComponent, selector: "azavista-workflow-builder-node-form-field-toggle" }, { kind: "component", type: i13.WorkflowBuilderNodeFormFieldProcessComponent, selector: "azavista-workflow-builder-node-form-field-process", inputs: ["property"] }, { kind: "pipe", type: i14.TranslatePipe, name: "translate" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: WorkflowBuilderNodeFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'azavista-workflow-builder-node-form', providers: [...ngResizeObserverProviders], changeDetection: ChangeDetectionStrategy.Default, template: "<div\r\n  class=\"workflow-builder-node-item\"\r\n  *ngIf=\"workflowSettingsGroupedFieldData && canvasGroupFieldData\"\r\n>\r\n  <azavista-workflow-builder-node-form-header\r\n    #formHeader\r\n    [controllerData]=\"controllerData\"\r\n    (canvasChanges)=\"onUpdateCanvasFields($event)\"\r\n  ></azavista-workflow-builder-node-form-header>\r\n\r\n  <div class=\"workflow-builder-node-item__fields\">\r\n    <ng-container *ngIf=\"workflowSettingsGroupedFieldData.expandPanels\">\r\n      <ng-container\r\n        *ngFor=\"let property of properties; trackBy: trackByWorkflowProperty\"\r\n      >\r\n        <ng-container\r\n          *ngIf=\"formGroup?.controls?.[property.attribute] as formControl\"\r\n        >\r\n          <azavista-workflow-builder-node-form-field-select\r\n            *ngIf=\"\r\n              property.type === 'select' || property.type === 'multiselect'\r\n            \"\r\n            [eventId]=\"eventId\"\r\n            [workflowId]=\"workflowId\"\r\n            [property]=\"property\"\r\n            [control]=\"$any(formControl)\"\r\n          >\r\n          </azavista-workflow-builder-node-form-field-select>\r\n          <azavista-workflow-builder-node-form-field-text\r\n            *ngIf=\"property.type === 'text' || property.type === 'number'\"\r\n            [eventId]=\"eventId\"\r\n            [workflowId]=\"workflowId\"\r\n            [property]=\"$any(property)\"\r\n            [control]=\"$any(formControl)\"\r\n          >\r\n          </azavista-workflow-builder-node-form-field-text>\r\n          <azavista-workflow-builder-node-form-field-toggle\r\n            *ngIf=\"property.type === 'boolean'\"\r\n            [eventId]=\"eventId\"\r\n            [workflowId]=\"workflowId\"\r\n            [property]=\"$any(property)\"\r\n            [control]=\"$any(formControl)\"\r\n          >\r\n          </azavista-workflow-builder-node-form-field-toggle>\r\n          <azavista-workflow-builder-node-form-field-process\r\n            *ngIf=\"property.type === 'process'\"\r\n            [eventId]=\"eventId\"\r\n            [workflowId]=\"workflowId\"\r\n            [property]=\"$any(property)\"\r\n            [control]=\"$any(formControl)\"\r\n          >\r\n          </azavista-workflow-builder-node-form-field-process>\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n  <div\r\n    class=\"workflow-builder-node-item__footer\"\r\n    *ngIf=\"workflowSettingsGroupedFieldData.fieldsWithEntity.fields.length > 0\"\r\n  >\r\n    <azavista-button (click)=\"toggleExpandPanels()\" color=\"primary\">{{\r\n      (workflowSettingsGroupedFieldData.expandPanels\r\n        ? \"CLOSE\"\r\n        : isWorkflowValid\r\n          ? \"OPEN\"\r\n          : \"SETUP\"\r\n      ) | translate\r\n    }}</azavista-button>\r\n  </div>\r\n  <div\r\n    class=\"workflow-builder-node-item__absolute-elements\">\r\n    <button *ngIf=\"!formHeader.editMode\" class=\"workflow-builder-node-item__absolute-elements__button-delete\" mat-icon-button (click)=\"removeNode.emit()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n", styles: [":host{font-size:12px;display:flex;position:relative;width:100%;height:min-content;border:1px solid #ccc;background-color:#f5f4f5;border-radius:4px;padding:1em;box-sizing:border-box}:host ::ng-deep *,:host ::ng-deep .mat-mdc-slide-toggle .mdc-label{font-size:12px;font-family:var(--azavista-font)}:host ::ng-deep .mat-mdc-form-field-infix{min-height:36px}:host ::ng-deep .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:18px}:host ::ng-deep .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY( -24.75px) scale(var(--mat-mdc-form-field-floating-label-scale, .75));transform:var(--mat-mdc-form-field-label-transform)}:host ::ng-deep .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}:host ::ng-deep .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}:host ::ng-deep .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix{padding-top:6px;padding-bottom:6px}:host ::ng-deep .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label{display:none}:host ::ng-deep .mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:none}:host ::ng-deep .mat-mdc-form-field{background-color:#fff}:host ::ng-deep .mat-mdc-form-field .mat-mdc-form-field-flex{height:auto!important;max-height:unset!important}:host ::ng-deep .mat-mdc-form-field .mat-mdc-select-arrow-wrapper{display:none}:host ::ng-deep .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined{height:auto!important;max-height:unset!important}:host ::ng-deep .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined:hover{background-color:transparent}:host ::ng-deep .mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding:4px 0!important;min-height:auto}:host ::ng-deep .mat-mdc-form-field .mat-mdc-form-field-required-marker{color:var(--palette-warn-500)!important}:host ::ng-deep .mat-mdc-form-field.mat-form-field-not-empty label,:host ::ng-deep .mat-mdc-form-field.mat-focused label{display:none}:host ::ng-deep .mat-mdc-form-field.mat-form-field-not-empty .mdc-notched-outline__notch,:host ::ng-deep .mat-mdc-form-field.mat-focused .mdc-notched-outline__notch{width:0px!important;padding:0}:host ::ng-deep .mat-mdc-form-field.mat-form-field-not-empty:not(.mat-form-field-invalid){--mdc-outlined-text-field-outline-color: #4caf50}.hidden.hidden[class]{display:none}.workflow-builder-node-item{display:flex;flex-direction:column;max-width:100%;width:100%;height:min-content;gap:.8em}.workflow-builder-node-item__fields{display:flex;flex-direction:column;flex:1;gap:.8em}.workflow-builder-node-item__fields ::ng-deep mat-form-field{width:100%}.workflow-builder-node-item__footer{display:flex;flex-direction:column}.workflow-builder-node-item__footer ::ng-deep .azavista-button-component.button-container{width:100%}.workflow-builder-node-item__footer ::ng-deep .azavista-button-component.button-container button{width:inherit;background-color:#98ca71}.workflow-builder-node-item__footer ::ng-deep .azavista-button-component.button-container .mdc-button__label{text-transform:uppercase}.workflow-builder-node-item__absolute-elements>*{position:absolute}.workflow-builder-node-item__absolute-elements__button-delete{--mdc-icon-button-icon-size: 16px;--mdc-icon-button-state-layer-size: 32px;overflow:hidden;top:0;right:0;padding:8px}.workflow-builder-node-item__absolute-elements__button-delete mat-icon{height:1em;width:1em;font-weight:600}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.AzavistaSharedService }, { type: i0.ElementRef }, { type: i2.AzavistaWorkflowBuilderController }, { type: i3.NgResizeObserver }, { type: i0.NgZone }, { type: i4.AzavistaWorkflowBuilderFormFieldService }]; }, propDecorators: { node: [{
                type: Input
            }], eventId: [{
                type: Input
            }], diagramEl: [{
                type: Input
            }], attrNodeId: [{
                type: HostBinding,
                args: ['attr.nodeId']
            }], workflowSettingsChanges: [{
                type: Output
            }], canvasChanges: [{
                type: Output
            }], removeNode: [{
                type: Output
            }], workflowSettingsGroupedFieldEl: [{
                type: ViewChild,
                args: ['workflowSettingsGroupedField', {
                        read: AzavistaGroupedFieldsComponent,
                    }]
            }], formHeader: [{
                type: ViewChild,
                args: ['formHeader']
            }], onKeyDown: [{
                type: HostListener,
                args: ['keydown', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,